package org.example.practice;

public class MathEx03 {
    public static long solution(){
        /*
        문제 : 파보나치 수는 F(0) = 0, F(1) = 1일 때, 1 이상의 n에 대하여 F(n) = F(n-1) + F(n-2) 가 적용되는 수 입니다.
        예를들어
        F(2) = F(0) + F(1) = 0 + 1 = 1
        F(3) = F(1) + F(2) = 1 + 1 = 2
        F(4) = F(2) + F(3) = 1 + 2 = 3
        F(5) = F(3) + F(4) = 2 + 3 = 5
        와 같이 이어집니다.

        2 이상의 n이 입력되었을 때, n번째 피보나치 수를 1234567으로 나눈 나머지를 리턴하는 함수, solution을 완성해 주세요.

        제한 사항
        n은 2 이상 100,000 이하인 자연수입니다.

         */
        /*
        해결 방안 :
        [n번째 피보나치 수%1234567] 은 [n-2번째의 피보나치 수%1234567] 와 [n-1번째의 피보나치 수%1234567]를 더한 후 1234567로 나눈 나머지와 같다.

        (*처음에는 n번째 피보나치 수를 구한 후에 1234567로 나누려고 했으나, 그럼 100000번째 피보나치 수가 long의 범위를 초과하기 때문에 오버스택플로우가 발생하는 문제가 생겨서
        위의 해겳방안을 사용했다.)
         */

        int n = 100000;
        long f_bb = 0;
        long f_b = 1;
        long answer = 0;

        for(int i = 2; i<=n; i++){
            answer = (f_bb + f_b) % 1234567;
            f_bb = f_b;
            f_b = answer;
        }

        return answer;
    }
}
